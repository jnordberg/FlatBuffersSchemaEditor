/*
 * generated by Xtext
 */
grammar InternalFlatBuffers;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package maxim.zaks.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package maxim.zaks.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import maxim.zaks.services.FlatBuffersGrammarAccess;

}

@parser::members {
 
 	private FlatBuffersGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(FlatBuffersGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleSchema
entryRuleSchema 
:
{ before(grammarAccess.getSchemaRule()); }
	 ruleSchema
{ after(grammarAccess.getSchemaRule()); } 
	 EOF 
;

// Rule Schema
ruleSchema
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSchemaAccess().getGroup()); }
(rule__Schema__Group__0)
{ after(grammarAccess.getSchemaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRootType
entryRuleRootType 
:
{ before(grammarAccess.getRootTypeRule()); }
	 ruleRootType
{ after(grammarAccess.getRootTypeRule()); } 
	 EOF 
;

// Rule RootType
ruleRootType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRootTypeAccess().getGroup()); }
(rule__RootType__Group__0)
{ after(grammarAccess.getRootTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCustomAttributes
entryRuleCustomAttributes 
:
{ before(grammarAccess.getCustomAttributesRule()); }
	 ruleCustomAttributes
{ after(grammarAccess.getCustomAttributesRule()); } 
	 EOF 
;

// Rule CustomAttributes
ruleCustomAttributes
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCustomAttributesAccess().getGroup()); }
(rule__CustomAttributes__Group__0)
{ after(grammarAccess.getCustomAttributesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFileIdentifier
entryRuleFileIdentifier 
:
{ before(grammarAccess.getFileIdentifierRule()); }
	 ruleFileIdentifier
{ after(grammarAccess.getFileIdentifierRule()); } 
	 EOF 
;

// Rule FileIdentifier
ruleFileIdentifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFileIdentifierAccess().getGroup()); }
(rule__FileIdentifier__Group__0)
{ after(grammarAccess.getFileIdentifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFileExtension
entryRuleFileExtension 
:
{ before(grammarAccess.getFileExtensionRule()); }
	 ruleFileExtension
{ after(grammarAccess.getFileExtensionRule()); } 
	 EOF 
;

// Rule FileExtension
ruleFileExtension
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFileExtensionAccess().getGroup()); }
(rule__FileExtension__Group__0)
{ after(grammarAccess.getFileExtensionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamespace
entryRuleNamespace 
:
{ before(grammarAccess.getNamespaceRule()); }
	 ruleNamespace
{ after(grammarAccess.getNamespaceRule()); } 
	 EOF 
;

// Rule Namespace
ruleNamespace
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamespaceAccess().getGroup()); }
(rule__Namespace__Group__0)
{ after(grammarAccess.getNamespaceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInclude
entryRuleInclude 
:
{ before(grammarAccess.getIncludeRule()); }
	 ruleInclude
{ after(grammarAccess.getIncludeRule()); } 
	 EOF 
;

// Rule Include
ruleInclude
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIncludeAccess().getGroup()); }
(rule__Include__Group__0)
{ after(grammarAccess.getIncludeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefinition
entryRuleDefinition 
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefinitionAccess().getAlternatives()); }
(rule__Definition__Alternatives)
{ after(grammarAccess.getDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStruct
entryRuleStruct 
:
{ before(grammarAccess.getStructRule()); }
	 ruleStruct
{ after(grammarAccess.getStructRule()); } 
	 EOF 
;

// Rule Struct
ruleStruct
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructAccess().getGroup()); }
(rule__Struct__Group__0)
{ after(grammarAccess.getStructAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructFields
entryRuleStructFields 
:
{ before(grammarAccess.getStructFieldsRule()); }
	 ruleStructFields
{ after(grammarAccess.getStructFieldsRule()); } 
	 EOF 
;

// Rule StructFields
ruleStructFields
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructFieldsAccess().getGroup()); }
(rule__StructFields__Group__0)
{ after(grammarAccess.getStructFieldsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTable
entryRuleTable 
:
{ before(grammarAccess.getTableRule()); }
	 ruleTable
{ after(grammarAccess.getTableRule()); } 
	 EOF 
;

// Rule Table
ruleTable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTableAccess().getGroup()); }
(rule__Table__Group__0)
{ after(grammarAccess.getTableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFields
entryRuleFields 
:
{ before(grammarAccess.getFieldsRule()); }
	 ruleFields
{ after(grammarAccess.getFieldsRule()); } 
	 EOF 
;

// Rule Fields
ruleFields
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldsAccess().getGroup()); }
(rule__Fields__Group__0)
{ after(grammarAccess.getFieldsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getAlternatives()); }
(rule__Value__Alternatives)
{ after(grammarAccess.getValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldAttributes
entryRuleFieldAttributes 
:
{ before(grammarAccess.getFieldAttributesRule()); }
	 ruleFieldAttributes
{ after(grammarAccess.getFieldAttributesRule()); } 
	 EOF 
;

// Rule FieldAttributes
ruleFieldAttributes
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldAttributesAccess().getGroup()); }
(rule__FieldAttributes__Group__0)
{ after(grammarAccess.getFieldAttributesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeName
entryRuleAttributeName 
:
{ before(grammarAccess.getAttributeNameRule()); }
	 ruleAttributeName
{ after(grammarAccess.getAttributeNameRule()); } 
	 EOF 
;

// Rule AttributeName
ruleAttributeName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeNameAccess().getAlternatives()); }
(rule__AttributeName__Alternatives)
{ after(grammarAccess.getAttributeNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVector
entryRuleVector 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getVectorRule()); }
	 ruleVector
{ after(grammarAccess.getVectorRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Vector
ruleVector
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVectorAccess().getGroup()); }
(rule__Vector__Group__0)
{ after(grammarAccess.getVectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRulePrimitiveWithoutString
entryRulePrimitiveWithoutString 
:
{ before(grammarAccess.getPrimitiveWithoutStringRule()); }
	 rulePrimitiveWithoutString
{ after(grammarAccess.getPrimitiveWithoutStringRule()); } 
	 EOF 
;

// Rule PrimitiveWithoutString
rulePrimitiveWithoutString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimitiveWithoutStringAccess().getAlternatives()); }
(rule__PrimitiveWithoutString__Alternatives)
{ after(grammarAccess.getPrimitiveWithoutStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimitive
entryRulePrimitive 
:
{ before(grammarAccess.getPrimitiveRule()); }
	 rulePrimitive
{ after(grammarAccess.getPrimitiveRule()); } 
	 EOF 
;

// Rule Primitive
rulePrimitive
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimitiveAccess().getAlternatives()); }
(rule__Primitive__Alternatives)
{ after(grammarAccess.getPrimitiveAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnum
entryRuleEnum 
:
{ before(grammarAccess.getEnumRule()); }
	 ruleEnum
{ after(grammarAccess.getEnumRule()); } 
	 EOF 
;

// Rule Enum
ruleEnum
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumAccess().getGroup()); }
(rule__Enum__Group__0)
{ after(grammarAccess.getEnumAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumCase
entryRuleEnumCase 
:
{ before(grammarAccess.getEnumCaseRule()); }
	 ruleEnumCase
{ after(grammarAccess.getEnumCaseRule()); } 
	 EOF 
;

// Rule EnumCase
ruleEnumCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumCaseAccess().getGroup()); }
(rule__EnumCase__Group__0)
{ after(grammarAccess.getEnumCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnion
entryRuleUnion 
:
{ before(grammarAccess.getUnionRule()); }
	 ruleUnion
{ after(grammarAccess.getUnionRule()); } 
	 EOF 
;

// Rule Union
ruleUnion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnionAccess().getGroup()); }
(rule__Union__Group__0)
{ after(grammarAccess.getUnionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimitiveNumberType
entryRulePrimitiveNumberType 
:
{ before(grammarAccess.getPrimitiveNumberTypeRule()); }
	 rulePrimitiveNumberType
{ after(grammarAccess.getPrimitiveNumberTypeRule()); } 
	 EOF 
;

// Rule PrimitiveNumberType
rulePrimitiveNumberType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimitiveNumberTypeAccess().getAlternatives()); }
(rule__PrimitiveNumberType__Alternatives)
{ after(grammarAccess.getPrimitiveNumberTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValidID
entryRuleValidID 
:
{ before(grammarAccess.getValidIDRule()); }
	 ruleValidID
{ after(grammarAccess.getValidIDRule()); } 
	 EOF 
;

// Rule ValidID
ruleValidID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValidIDAccess().getAlternatives()); }
(rule__ValidID__Alternatives)
{ after(grammarAccess.getValidIDAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumber
entryRuleNumber 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Number
ruleNumber
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberAccess().getAlternatives()); }
(rule__Number__Alternatives)
{ after(grammarAccess.getNumberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}




rule__Definition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getTableParserRuleCall_0()); }
	ruleTable
{ after(grammarAccess.getDefinitionAccess().getTableParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getStructParserRuleCall_1()); }
	ruleStruct
{ after(grammarAccess.getDefinitionAccess().getStructParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getEnumParserRuleCall_2()); }
	ruleEnum
{ after(grammarAccess.getDefinitionAccess().getEnumParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getUnionParserRuleCall_3()); }
	ruleUnion
{ after(grammarAccess.getDefinitionAccess().getUnionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructFields__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructFieldsAccess().getPrimTypeAssignment_2_0()); }
(rule__StructFields__PrimTypeAssignment_2_0)
{ after(grammarAccess.getStructFieldsAccess().getPrimTypeAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getStructFieldsAccess().getDefTypeAssignment_2_1()); }
(rule__StructFields__DefTypeAssignment_2_1)
{ after(grammarAccess.getStructFieldsAccess().getDefTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getNumberAssignment_0()); }
(rule__Value__NumberAssignment_0)
{ after(grammarAccess.getValueAccess().getNumberAssignment_0()); }
)

    |(
{ before(grammarAccess.getValueAccess().getIsFalseAssignment_1()); }
(rule__Value__IsFalseAssignment_1)
{ after(grammarAccess.getValueAccess().getIsFalseAssignment_1()); }
)

    |(
{ before(grammarAccess.getValueAccess().getIsTrueAssignment_2()); }
(rule__Value__IsTrueAssignment_2)
{ after(grammarAccess.getValueAccess().getIsTrueAssignment_2()); }
)

    |(
{ before(grammarAccess.getValueAccess().getEnumCaseAssignment_3()); }
(rule__Value__EnumCaseAssignment_3)
{ after(grammarAccess.getValueAccess().getEnumCaseAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getDeprectatedAssignment_0()); }
(rule__AttributeName__DeprectatedAssignment_0)
{ after(grammarAccess.getAttributeNameAccess().getDeprectatedAssignment_0()); }
)

    |(
{ before(grammarAccess.getAttributeNameAccess().getGroup_1()); }
(rule__AttributeName__Group_1__0)
{ after(grammarAccess.getAttributeNameAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getAttributeNameAccess().getRequiredAssignment_2()); }
(rule__AttributeName__RequiredAssignment_2)
{ after(grammarAccess.getAttributeNameAccess().getRequiredAssignment_2()); }
)

    |(
{ before(grammarAccess.getAttributeNameAccess().getOriginal_orderAssignment_3()); }
(rule__AttributeName__Original_orderAssignment_3)
{ after(grammarAccess.getAttributeNameAccess().getOriginal_orderAssignment_3()); }
)

    |(
{ before(grammarAccess.getAttributeNameAccess().getGroup_4()); }
(rule__AttributeName__Group_4__0)
{ after(grammarAccess.getAttributeNameAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getAttributeNameAccess().getGroup_5()); }
(rule__AttributeName__Group_5__0)
{ after(grammarAccess.getAttributeNameAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getAttributeNameAccess().getBit_flagsAssignment_6()); }
(rule__AttributeName__Bit_flagsAssignment_6)
{ after(grammarAccess.getAttributeNameAccess().getBit_flagsAssignment_6()); }
)

    |(
{ before(grammarAccess.getAttributeNameAccess().getGroup_7()); }
(rule__AttributeName__Group_7__0)
{ after(grammarAccess.getAttributeNameAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getAttributeNameAccess().getKeyAssignment_8()); }
(rule__AttributeName__KeyAssignment_8)
{ after(grammarAccess.getAttributeNameAccess().getKeyAssignment_8()); }
)

    |(
{ before(grammarAccess.getAttributeNameAccess().getGroup_9()); }
(rule__AttributeName__Group_9__0)
{ after(grammarAccess.getAttributeNameAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Alternatives_9_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getIntValueAssignment_9_1_1_0()); }
(rule__AttributeName__IntValueAssignment_9_1_1_0)
{ after(grammarAccess.getAttributeNameAccess().getIntValueAssignment_9_1_1_0()); }
)

    |(
{ before(grammarAccess.getAttributeNameAccess().getStringValueAssignment_9_1_1_1()); }
(rule__AttributeName__StringValueAssignment_9_1_1_1)
{ after(grammarAccess.getAttributeNameAccess().getStringValueAssignment_9_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getPrimTypeAssignment_0()); }
(rule__Type__PrimTypeAssignment_0)
{ after(grammarAccess.getTypeAccess().getPrimTypeAssignment_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getVectorTypeAssignment_1()); }
(rule__Type__VectorTypeAssignment_1)
{ after(grammarAccess.getTypeAccess().getVectorTypeAssignment_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getDefTypeAssignment_2()); }
(rule__Type__DefTypeAssignment_2)
{ after(grammarAccess.getTypeAccess().getDefTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveWithoutString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveWithoutStringAccess().getBoolKeyword_0()); }

	'bool' 

{ after(grammarAccess.getPrimitiveWithoutStringAccess().getBoolKeyword_0()); }
)

    |(
{ before(grammarAccess.getPrimitiveWithoutStringAccess().getFloatKeyword_1()); }

	'float' 

{ after(grammarAccess.getPrimitiveWithoutStringAccess().getFloatKeyword_1()); }
)

    |(
{ before(grammarAccess.getPrimitiveWithoutStringAccess().getDoubleKeyword_2()); }

	'double' 

{ after(grammarAccess.getPrimitiveWithoutStringAccess().getDoubleKeyword_2()); }
)

    |(
{ before(grammarAccess.getPrimitiveWithoutStringAccess().getPrimitiveNumberTypeParserRuleCall_3()); }
	rulePrimitiveNumberType
{ after(grammarAccess.getPrimitiveWithoutStringAccess().getPrimitiveNumberTypeParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveAccess().getStringKeyword_0()); }

	'string' 

{ after(grammarAccess.getPrimitiveAccess().getStringKeyword_0()); }
)

    |(
{ before(grammarAccess.getPrimitiveAccess().getPrimitiveWithoutStringParserRuleCall_1()); }
	rulePrimitiveWithoutString
{ after(grammarAccess.getPrimitiveAccess().getPrimitiveWithoutStringParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveNumberType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveNumberTypeAccess().getByteKeyword_0()); }

	'byte' 

{ after(grammarAccess.getPrimitiveNumberTypeAccess().getByteKeyword_0()); }
)

    |(
{ before(grammarAccess.getPrimitiveNumberTypeAccess().getUbyteKeyword_1()); }

	'ubyte' 

{ after(grammarAccess.getPrimitiveNumberTypeAccess().getUbyteKeyword_1()); }
)

    |(
{ before(grammarAccess.getPrimitiveNumberTypeAccess().getShortKeyword_2()); }

	'short' 

{ after(grammarAccess.getPrimitiveNumberTypeAccess().getShortKeyword_2()); }
)

    |(
{ before(grammarAccess.getPrimitiveNumberTypeAccess().getUshortKeyword_3()); }

	'ushort' 

{ after(grammarAccess.getPrimitiveNumberTypeAccess().getUshortKeyword_3()); }
)

    |(
{ before(grammarAccess.getPrimitiveNumberTypeAccess().getIntKeyword_4()); }

	'int' 

{ after(grammarAccess.getPrimitiveNumberTypeAccess().getIntKeyword_4()); }
)

    |(
{ before(grammarAccess.getPrimitiveNumberTypeAccess().getUintKeyword_5()); }

	'uint' 

{ after(grammarAccess.getPrimitiveNumberTypeAccess().getUintKeyword_5()); }
)

    |(
{ before(grammarAccess.getPrimitiveNumberTypeAccess().getLongKeyword_6()); }

	'long' 

{ after(grammarAccess.getPrimitiveNumberTypeAccess().getLongKeyword_6()); }
)

    |(
{ before(grammarAccess.getPrimitiveNumberTypeAccess().getUlongKeyword_7()); }

	'ulong' 

{ after(grammarAccess.getPrimitiveNumberTypeAccess().getUlongKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValidID__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidIDAccess().getHASH_ATTRIBUTETerminalRuleCall_0()); }
	RULE_HASH_ATTRIBUTE
{ after(grammarAccess.getValidIDAccess().getHASH_ATTRIBUTETerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValidIDAccess().getID_ATTRIBUTETerminalRuleCall_1()); }
	RULE_ID_ATTRIBUTE
{ after(grammarAccess.getValidIDAccess().getID_ATTRIBUTETerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getValidIDAccess().getREQUIRED_ATTRIBUTETerminalRuleCall_2()); }
	RULE_REQUIRED_ATTRIBUTE
{ after(grammarAccess.getValidIDAccess().getREQUIRED_ATTRIBUTETerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getValidIDAccess().getKEY_ATTRIBUTETerminalRuleCall_3()); }
	RULE_KEY_ATTRIBUTE
{ after(grammarAccess.getValidIDAccess().getKEY_ATTRIBUTETerminalRuleCall_3()); }
)

    |(
{ before(grammarAccess.getValidIDAccess().getDEPRECTED_ATTRIBUTETerminalRuleCall_4()); }
	RULE_DEPRECTED_ATTRIBUTE
{ after(grammarAccess.getValidIDAccess().getDEPRECTED_ATTRIBUTETerminalRuleCall_4()); }
)

    |(
{ before(grammarAccess.getValidIDAccess().getIDTerminalRuleCall_5()); }
	RULE_ID
{ after(grammarAccess.getValidIDAccess().getIDTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); }
	RULE_HEX
{ after(grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getGroup_1()); }
(rule__Number__Group_1__0)
{ after(grammarAccess.getNumberAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); }
	RULE_INT
{ after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); }
	RULE_DECIMAL
{ after(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); }
	RULE_INT
{ after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); }
	RULE_DECIMAL
{ after(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Schema__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Schema__Group__0__Impl
	rule__Schema__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getIncludesAssignment_0()); }
(rule__Schema__IncludesAssignment_0)*
{ after(grammarAccess.getSchemaAccess().getIncludesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Schema__Group__1__Impl
	rule__Schema__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getNamepsaceAssignment_1()); }
(rule__Schema__NamepsaceAssignment_1)?
{ after(grammarAccess.getSchemaAccess().getNamepsaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Schema__Group__2__Impl
	rule__Schema__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getFileIdentifierAssignment_2()); }
(rule__Schema__FileIdentifierAssignment_2)?
{ after(grammarAccess.getSchemaAccess().getFileIdentifierAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Schema__Group__3__Impl
	rule__Schema__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getFile_extensionAssignment_3()); }
(rule__Schema__File_extensionAssignment_3)?
{ after(grammarAccess.getSchemaAccess().getFile_extensionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Schema__Group__4__Impl
	rule__Schema__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getCustomAttributesAssignment_4()); }
(rule__Schema__CustomAttributesAssignment_4)*
{ after(grammarAccess.getSchemaAccess().getCustomAttributesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Schema__Group__5__Impl
	rule__Schema__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getDefinitionsAssignment_5()); }
(rule__Schema__DefinitionsAssignment_5)*
{ after(grammarAccess.getSchemaAccess().getDefinitionsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Schema__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getRootTypeAssignment_6()); }
(rule__Schema__RootTypeAssignment_6)
{ after(grammarAccess.getSchemaAccess().getRootTypeAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__RootType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootType__Group__0__Impl
	rule__RootType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RootType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootTypeAccess().getRoot_typeKeyword_0()); }

	'root_type' 

{ after(grammarAccess.getRootTypeAccess().getRoot_typeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootType__Group__1__Impl
	rule__RootType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RootType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootTypeAccess().getTypeAssignment_1()); }
(rule__RootType__TypeAssignment_1)
{ after(grammarAccess.getRootTypeAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RootType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootTypeAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getRootTypeAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CustomAttributes__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomAttributes__Group__0__Impl
	rule__CustomAttributes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomAttributes__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomAttributesAccess().getAttributeKeyword_0()); }

	'attribute' 

{ after(grammarAccess.getCustomAttributesAccess().getAttributeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomAttributes__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomAttributes__Group__1__Impl
	rule__CustomAttributes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomAttributes__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomAttributesAccess().getNameAssignment_1()); }
(rule__CustomAttributes__NameAssignment_1)
{ after(grammarAccess.getCustomAttributesAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomAttributes__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomAttributes__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomAttributes__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomAttributesAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getCustomAttributesAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FileIdentifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileIdentifier__Group__0__Impl
	rule__FileIdentifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FileIdentifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileIdentifierAccess().getFile_identifierKeyword_0()); }

	'file_identifier' 

{ after(grammarAccess.getFileIdentifierAccess().getFile_identifierKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileIdentifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileIdentifier__Group__1__Impl
	rule__FileIdentifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FileIdentifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileIdentifierAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
{ after(grammarAccess.getFileIdentifierAccess().getSTRINGTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileIdentifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileIdentifier__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FileIdentifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileIdentifierAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getFileIdentifierAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FileExtension__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileExtension__Group__0__Impl
	rule__FileExtension__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FileExtension__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileExtensionAccess().getFile_extensionKeyword_0()); }

	'file_extension' 

{ after(grammarAccess.getFileExtensionAccess().getFile_extensionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileExtension__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileExtension__Group__1__Impl
	rule__FileExtension__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FileExtension__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileExtensionAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
{ after(grammarAccess.getFileExtensionAccess().getSTRINGTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FileExtension__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FileExtension__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FileExtension__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileExtensionAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getFileExtensionAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Namespace__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Namespace__Group__0__Impl
	rule__Namespace__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getNamespaceKeyword_0()); }

	'namespace' 

{ after(grammarAccess.getNamespaceAccess().getNamespaceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Namespace__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Namespace__Group__1__Impl
	rule__Namespace__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getNameAssignment_1()); }
(rule__Namespace__NameAssignment_1)
{ after(grammarAccess.getNamespaceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Namespace__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Namespace__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getNamespaceAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Include__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Include__Group__0__Impl
	rule__Include__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAccess().getIncludeKeyword_0()); }

	'include' 

{ after(grammarAccess.getIncludeAccess().getIncludeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Include__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Include__Group__1__Impl
	rule__Include__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
{ after(grammarAccess.getIncludeAccess().getSTRINGTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Include__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Include__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Include__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIncludeAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getIncludeAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Struct__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Struct__Group__0__Impl
	rule__Struct__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructAccess().getStructKeyword_0()); }

	'struct' 

{ after(grammarAccess.getStructAccess().getStructKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Struct__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Struct__Group__1__Impl
	rule__Struct__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructAccess().getNameAssignment_1()); }
(rule__Struct__NameAssignment_1)
{ after(grammarAccess.getStructAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Struct__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Struct__Group__2__Impl
	rule__Struct__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructAccess().getAttributesAssignment_2()); }
(rule__Struct__AttributesAssignment_2)?
{ after(grammarAccess.getStructAccess().getAttributesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Struct__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Struct__Group__3__Impl
	rule__Struct__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getStructAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Struct__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Struct__Group__4__Impl
	rule__Struct__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructAccess().getFieldsAssignment_4()); }
(rule__Struct__FieldsAssignment_4)*
{ after(grammarAccess.getStructAccess().getFieldsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Struct__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Struct__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getStructAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__StructFields__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructFields__Group__0__Impl
	rule__StructFields__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructFields__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructFieldsAccess().getNameAssignment_0()); }
(rule__StructFields__NameAssignment_0)
{ after(grammarAccess.getStructFieldsAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructFields__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructFields__Group__1__Impl
	rule__StructFields__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructFields__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructFieldsAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getStructFieldsAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructFields__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructFields__Group__2__Impl
	rule__StructFields__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructFields__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructFieldsAccess().getAlternatives_2()); }
(rule__StructFields__Alternatives_2)
{ after(grammarAccess.getStructFieldsAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructFields__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructFields__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructFields__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructFieldsAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getStructFieldsAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Table__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group__0__Impl
	rule__Table__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getTableKeyword_0()); }

	'table' 

{ after(grammarAccess.getTableAccess().getTableKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group__1__Impl
	rule__Table__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getNameAssignment_1()); }
(rule__Table__NameAssignment_1)
{ after(grammarAccess.getTableAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group__2__Impl
	rule__Table__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getAttributesAssignment_2()); }
(rule__Table__AttributesAssignment_2)?
{ after(grammarAccess.getTableAccess().getAttributesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group__3__Impl
	rule__Table__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group__4__Impl
	rule__Table__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getFieldsAssignment_4()); }
(rule__Table__FieldsAssignment_4)*
{ after(grammarAccess.getTableAccess().getFieldsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Table__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Fields__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fields__Group__0__Impl
	rule__Fields__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fields__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldsAccess().getNameAssignment_0()); }
(rule__Fields__NameAssignment_0)
{ after(grammarAccess.getFieldsAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fields__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fields__Group__1__Impl
	rule__Fields__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Fields__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldsAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getFieldsAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fields__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fields__Group__2__Impl
	rule__Fields__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Fields__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldsAccess().getTypeAssignment_2()); }
(rule__Fields__TypeAssignment_2)
{ after(grammarAccess.getFieldsAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fields__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fields__Group__3__Impl
	rule__Fields__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Fields__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldsAccess().getGroup_3()); }
(rule__Fields__Group_3__0)?
{ after(grammarAccess.getFieldsAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fields__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fields__Group__4__Impl
	rule__Fields__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Fields__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldsAccess().getAttributesAssignment_4()); }
(rule__Fields__AttributesAssignment_4)?
{ after(grammarAccess.getFieldsAccess().getAttributesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fields__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fields__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fields__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldsAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getFieldsAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Fields__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fields__Group_3__0__Impl
	rule__Fields__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fields__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldsAccess().getEqualsSignKeyword_3_0()); }

	'=' 

{ after(grammarAccess.getFieldsAccess().getEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fields__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fields__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fields__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldsAccess().getDefaultValueAssignment_3_1()); }
(rule__Fields__DefaultValueAssignment_3_1)
{ after(grammarAccess.getFieldsAccess().getDefaultValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FieldAttributes__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldAttributes__Group__0__Impl
	rule__FieldAttributes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAttributes__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAttributesAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getFieldAttributesAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldAttributes__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldAttributes__Group__1__Impl
	rule__FieldAttributes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAttributes__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAttributesAccess().getAtributeNamesAssignment_1()); }
(rule__FieldAttributes__AtributeNamesAssignment_1)
{ after(grammarAccess.getFieldAttributesAccess().getAtributeNamesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldAttributes__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldAttributes__Group__2__Impl
	rule__FieldAttributes__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAttributes__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAttributesAccess().getGroup_2()); }
(rule__FieldAttributes__Group_2__0)*
{ after(grammarAccess.getFieldAttributesAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldAttributes__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldAttributes__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAttributes__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAttributesAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getFieldAttributesAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FieldAttributes__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldAttributes__Group_2__0__Impl
	rule__FieldAttributes__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAttributes__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAttributesAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getFieldAttributesAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldAttributes__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldAttributes__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAttributes__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAttributesAccess().getAtributeNamesAssignment_2_1()); }
(rule__FieldAttributes__AtributeNamesAssignment_2_1)
{ after(grammarAccess.getFieldAttributesAccess().getAtributeNamesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group_1__0__Impl
	rule__AttributeName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getHasAttributeIdAssignment_1_0()); }
(rule__AttributeName__HasAttributeIdAssignment_1_0)
{ after(grammarAccess.getAttributeNameAccess().getHasAttributeIdAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group_1__1__Impl
	rule__AttributeName__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getColonKeyword_1_1()); }

	':' 

{ after(grammarAccess.getAttributeNameAccess().getColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getAttributeIdAssignment_1_2()); }
(rule__AttributeName__AttributeIdAssignment_1_2)
{ after(grammarAccess.getAttributeNameAccess().getAttributeIdAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AttributeName__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group_4__0__Impl
	rule__AttributeName__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getHasAlignSizeAssignment_4_0()); }
(rule__AttributeName__HasAlignSizeAssignment_4_0)
{ after(grammarAccess.getAttributeNameAccess().getHasAlignSizeAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group_4__1__Impl
	rule__AttributeName__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getColonKeyword_4_1()); }

	':' 

{ after(grammarAccess.getAttributeNameAccess().getColonKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getAlignSizeAssignment_4_2()); }
(rule__AttributeName__AlignSizeAssignment_4_2)
{ after(grammarAccess.getAttributeNameAccess().getAlignSizeAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AttributeName__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group_5__0__Impl
	rule__AttributeName__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getHasHashAssignment_5_0()); }
(rule__AttributeName__HasHashAssignment_5_0)
{ after(grammarAccess.getAttributeNameAccess().getHasHashAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group_5__1__Impl
	rule__AttributeName__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getColonKeyword_5_1()); }

	':' 

{ after(grammarAccess.getAttributeNameAccess().getColonKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getHashKeyAssignment_5_2()); }
(rule__AttributeName__HashKeyAssignment_5_2)
{ after(grammarAccess.getAttributeNameAccess().getHashKeyAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AttributeName__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group_7__0__Impl
	rule__AttributeName__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getHasNestedTableNameAssignment_7_0()); }
(rule__AttributeName__HasNestedTableNameAssignment_7_0)
{ after(grammarAccess.getAttributeNameAccess().getHasNestedTableNameAssignment_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group_7__1__Impl
	rule__AttributeName__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getColonKeyword_7_1()); }

	':' 

{ after(grammarAccess.getAttributeNameAccess().getColonKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getNestedTableNameAssignment_7_2()); }
(rule__AttributeName__NestedTableNameAssignment_7_2)
{ after(grammarAccess.getAttributeNameAccess().getNestedTableNameAssignment_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AttributeName__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group_9__0__Impl
	rule__AttributeName__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getCustomNameAssignment_9_0()); }
(rule__AttributeName__CustomNameAssignment_9_0)
{ after(grammarAccess.getAttributeNameAccess().getCustomNameAssignment_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getGroup_9_1()); }
(rule__AttributeName__Group_9_1__0)?
{ after(grammarAccess.getAttributeNameAccess().getGroup_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeName__Group_9_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group_9_1__0__Impl
	rule__AttributeName__Group_9_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_9_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getColonKeyword_9_1_0()); }

	':' 

{ after(grammarAccess.getAttributeNameAccess().getColonKeyword_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeName__Group_9_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeName__Group_9_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Group_9_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getAlternatives_9_1_1()); }
(rule__AttributeName__Alternatives_9_1_1)
{ after(grammarAccess.getAttributeNameAccess().getAlternatives_9_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Vector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vector__Group__0__Impl
	rule__Vector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Vector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVectorAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getVectorAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Vector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vector__Group__1__Impl
	rule__Vector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Vector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVectorAccess().getTypeAssignment_1()); }
(rule__Vector__TypeAssignment_1)
{ after(grammarAccess.getVectorAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Vector__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Vector__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Vector__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVectorAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getVectorAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Enum__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__0__Impl
	rule__Enum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getEnumKeyword_0()); }

	'enum' 

{ after(grammarAccess.getEnumAccess().getEnumKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__1__Impl
	rule__Enum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getNameAssignment_1()); }
(rule__Enum__NameAssignment_1)
{ after(grammarAccess.getEnumAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__2__Impl
	rule__Enum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getGroup_2()); }
(rule__Enum__Group_2__0)?
{ after(grammarAccess.getEnumAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__3__Impl
	rule__Enum__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getAttributesAssignment_3()); }
(rule__Enum__AttributesAssignment_3)?
{ after(grammarAccess.getEnumAccess().getAttributesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__4__Impl
	rule__Enum__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__5__Impl
	rule__Enum__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getEnumCasesAssignment_5()); }
(rule__Enum__EnumCasesAssignment_5)
{ after(grammarAccess.getEnumAccess().getEnumCasesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__6__Impl
	rule__Enum__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getGroup_6()); }
(rule__Enum__Group_6__0)*
{ after(grammarAccess.getEnumAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Enum__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group_2__0__Impl
	rule__Enum__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getColonKeyword_2_0()); }

	':' 

{ after(grammarAccess.getEnumAccess().getColonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getTypeAssignment_2_1()); }
(rule__Enum__TypeAssignment_2_1)
{ after(grammarAccess.getEnumAccess().getTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Enum__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group_6__0__Impl
	rule__Enum__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getEnumAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getEnumCasesAssignment_6_1()); }
(rule__Enum__EnumCasesAssignment_6_1)
{ after(grammarAccess.getEnumAccess().getEnumCasesAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumCase__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumCase__Group__0__Impl
	rule__EnumCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumCase__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumCaseAccess().getNameAssignment_0()); }
(rule__EnumCase__NameAssignment_0)
{ after(grammarAccess.getEnumCaseAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumCase__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumCase__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumCase__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumCaseAccess().getGroup_1()); }
(rule__EnumCase__Group_1__0)?
{ after(grammarAccess.getEnumCaseAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumCase__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumCase__Group_1__0__Impl
	rule__EnumCase__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumCase__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumCaseAccess().getEqualsSignKeyword_1_0()); }

	'=' 

{ after(grammarAccess.getEnumCaseAccess().getEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumCase__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumCase__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumCase__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumCaseAccess().getValueAssignment_1_1()); }
(rule__EnumCase__ValueAssignment_1_1)
{ after(grammarAccess.getEnumCaseAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Union__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union__Group__0__Impl
	rule__Union__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Union__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionAccess().getUnionKeyword_0()); }

	'union' 

{ after(grammarAccess.getUnionAccess().getUnionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Union__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union__Group__1__Impl
	rule__Union__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Union__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionAccess().getNameAssignment_1()); }
(rule__Union__NameAssignment_1)
{ after(grammarAccess.getUnionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Union__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union__Group__2__Impl
	rule__Union__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Union__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getUnionAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Union__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union__Group__3__Impl
	rule__Union__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Union__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionAccess().getUnionCasesAssignment_3()); }
(rule__Union__UnionCasesAssignment_3)
{ after(grammarAccess.getUnionAccess().getUnionCasesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Union__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union__Group__4__Impl
	rule__Union__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Union__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionAccess().getGroup_4()); }
(rule__Union__Group_4__0)*
{ after(grammarAccess.getUnionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Union__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Union__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getUnionAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Union__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union__Group_4__0__Impl
	rule__Union__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Union__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getUnionAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Union__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Union__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionAccess().getUnionCasesAssignment_4_1()); }
(rule__Union__UnionCasesAssignment_4_1)
{ after(grammarAccess.getUnionAccess().getUnionCasesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); }
	ruleValidID
{ after(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); }
	ruleValidID
{ after(grammarAccess.getQualifiedNameAccess().getValidIDParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Number__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1__0__Impl
	rule__Number__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getAlternatives_1_0()); }
(rule__Number__Alternatives_1_0)
{ after(grammarAccess.getNumberAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getGroup_1_1()); }
(rule__Number__Group_1_1__0)?
{ after(grammarAccess.getNumberAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Number__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1_1__0__Impl
	rule__Number__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); }

	'.' 

{ after(grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getAlternatives_1_1_1()); }
(rule__Number__Alternatives_1_1_1)
{ after(grammarAccess.getNumberAccess().getAlternatives_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Schema__IncludesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getIncludesIncludeParserRuleCall_0_0()); }
	ruleInclude{ after(grammarAccess.getSchemaAccess().getIncludesIncludeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__NamepsaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getNamepsaceNamespaceParserRuleCall_1_0()); }
	ruleNamespace{ after(grammarAccess.getSchemaAccess().getNamepsaceNamespaceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__FileIdentifierAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getFileIdentifierFileIdentifierParserRuleCall_2_0()); }
	ruleFileIdentifier{ after(grammarAccess.getSchemaAccess().getFileIdentifierFileIdentifierParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__File_extensionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getFile_extensionFileExtensionParserRuleCall_3_0()); }
	ruleFileExtension{ after(grammarAccess.getSchemaAccess().getFile_extensionFileExtensionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__CustomAttributesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getCustomAttributesCustomAttributesParserRuleCall_4_0()); }
	ruleCustomAttributes{ after(grammarAccess.getSchemaAccess().getCustomAttributesCustomAttributesParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__DefinitionsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getDefinitionsDefinitionParserRuleCall_5_0()); }
	ruleDefinition{ after(grammarAccess.getSchemaAccess().getDefinitionsDefinitionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__RootTypeAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSchemaAccess().getRootTypeRootTypeParserRuleCall_6_0()); }
	ruleRootType{ after(grammarAccess.getSchemaAccess().getRootTypeRootTypeParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootType__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootTypeAccess().getTypeTableCrossReference_1_0()); }
(
{ before(grammarAccess.getRootTypeAccess().getTypeTableIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getRootTypeAccess().getTypeTableIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRootTypeAccess().getTypeTableCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CustomAttributes__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomAttributesAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getCustomAttributesAccess().getNameSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getNamespaceAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStructAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__AttributesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructAccess().getAttributesFieldAttributesParserRuleCall_2_0()); }
	ruleFieldAttributes{ after(grammarAccess.getStructAccess().getAttributesFieldAttributesParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Struct__FieldsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructAccess().getFieldsStructFieldsParserRuleCall_4_0()); }
	ruleStructFields{ after(grammarAccess.getStructAccess().getFieldsStructFieldsParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructFields__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructFieldsAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getStructFieldsAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructFields__PrimTypeAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructFieldsAccess().getPrimTypePrimitiveWithoutStringParserRuleCall_2_0_0()); }
	rulePrimitiveWithoutString{ after(grammarAccess.getStructFieldsAccess().getPrimTypePrimitiveWithoutStringParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructFields__DefTypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructFieldsAccess().getDefTypeDefinitionCrossReference_2_1_0()); }
(
{ before(grammarAccess.getStructFieldsAccess().getDefTypeDefinitionIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getStructFieldsAccess().getDefTypeDefinitionIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getStructFieldsAccess().getDefTypeDefinitionCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Table__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTableAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Table__AttributesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getAttributesFieldAttributesParserRuleCall_2_0()); }
	ruleFieldAttributes{ after(grammarAccess.getTableAccess().getAttributesFieldAttributesParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Table__FieldsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableAccess().getFieldsFieldsParserRuleCall_4_0()); }
	ruleFields{ after(grammarAccess.getTableAccess().getFieldsFieldsParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fields__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldsAccess().getNameValidIDParserRuleCall_0_0()); }
	ruleValidID{ after(grammarAccess.getFieldsAccess().getNameValidIDParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fields__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldsAccess().getTypeTypeParserRuleCall_2_0()); }
	ruleType{ after(grammarAccess.getFieldsAccess().getTypeTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fields__DefaultValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldsAccess().getDefaultValueValueParserRuleCall_3_1_0()); }
	ruleValue{ after(grammarAccess.getFieldsAccess().getDefaultValueValueParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fields__AttributesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldsAccess().getAttributesFieldAttributesParserRuleCall_4_0()); }
	ruleFieldAttributes{ after(grammarAccess.getFieldsAccess().getAttributesFieldAttributesParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__NumberAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getNumberNumberParserRuleCall_0_0()); }
	ruleNumber{ after(grammarAccess.getValueAccess().getNumberNumberParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__IsFalseAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getIsFalseFalseKeyword_1_0()); }
(
{ before(grammarAccess.getValueAccess().getIsFalseFalseKeyword_1_0()); }

	'false' 

{ after(grammarAccess.getValueAccess().getIsFalseFalseKeyword_1_0()); }
)

{ after(grammarAccess.getValueAccess().getIsFalseFalseKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__IsTrueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getIsTrueTrueKeyword_2_0()); }
(
{ before(grammarAccess.getValueAccess().getIsTrueTrueKeyword_2_0()); }

	'true' 

{ after(grammarAccess.getValueAccess().getIsTrueTrueKeyword_2_0()); }
)

{ after(grammarAccess.getValueAccess().getIsTrueTrueKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__EnumCaseAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getEnumCaseIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getValueAccess().getEnumCaseIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAttributes__AtributeNamesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAttributesAccess().getAtributeNamesAttributeNameParserRuleCall_1_0()); }
	ruleAttributeName{ after(grammarAccess.getFieldAttributesAccess().getAtributeNamesAttributeNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAttributes__AtributeNamesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAttributesAccess().getAtributeNamesAttributeNameParserRuleCall_2_1_0()); }
	ruleAttributeName{ after(grammarAccess.getFieldAttributesAccess().getAtributeNamesAttributeNameParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__DeprectatedAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getDeprectatedDEPRECTED_ATTRIBUTETerminalRuleCall_0_0()); }
	RULE_DEPRECTED_ATTRIBUTE{ after(grammarAccess.getAttributeNameAccess().getDeprectatedDEPRECTED_ATTRIBUTETerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__HasAttributeIdAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getHasAttributeIdID_ATTRIBUTETerminalRuleCall_1_0_0()); }
	RULE_ID_ATTRIBUTE{ after(grammarAccess.getAttributeNameAccess().getHasAttributeIdID_ATTRIBUTETerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__AttributeIdAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getAttributeIdINTTerminalRuleCall_1_2_0()); }
	RULE_INT{ after(grammarAccess.getAttributeNameAccess().getAttributeIdINTTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__RequiredAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getRequiredREQUIRED_ATTRIBUTETerminalRuleCall_2_0()); }
	RULE_REQUIRED_ATTRIBUTE{ after(grammarAccess.getAttributeNameAccess().getRequiredREQUIRED_ATTRIBUTETerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Original_orderAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getOriginal_orderOriginal_orderKeyword_3_0()); }
(
{ before(grammarAccess.getAttributeNameAccess().getOriginal_orderOriginal_orderKeyword_3_0()); }

	'original_order' 

{ after(grammarAccess.getAttributeNameAccess().getOriginal_orderOriginal_orderKeyword_3_0()); }
)

{ after(grammarAccess.getAttributeNameAccess().getOriginal_orderOriginal_orderKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__HasAlignSizeAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getHasAlignSizeForce_alignKeyword_4_0_0()); }
(
{ before(grammarAccess.getAttributeNameAccess().getHasAlignSizeForce_alignKeyword_4_0_0()); }

	'force_align' 

{ after(grammarAccess.getAttributeNameAccess().getHasAlignSizeForce_alignKeyword_4_0_0()); }
)

{ after(grammarAccess.getAttributeNameAccess().getHasAlignSizeForce_alignKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__AlignSizeAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getAlignSizeINTTerminalRuleCall_4_2_0()); }
	RULE_INT{ after(grammarAccess.getAttributeNameAccess().getAlignSizeINTTerminalRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__HasHashAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getHasHashHASH_ATTRIBUTETerminalRuleCall_5_0_0()); }
	RULE_HASH_ATTRIBUTE{ after(grammarAccess.getAttributeNameAccess().getHasHashHASH_ATTRIBUTETerminalRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__HashKeyAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getHashKeySTRINGTerminalRuleCall_5_2_0()); }
	RULE_STRING{ after(grammarAccess.getAttributeNameAccess().getHashKeySTRINGTerminalRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__Bit_flagsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getBit_flagsBit_flagsKeyword_6_0()); }
(
{ before(grammarAccess.getAttributeNameAccess().getBit_flagsBit_flagsKeyword_6_0()); }

	'bit_flags' 

{ after(grammarAccess.getAttributeNameAccess().getBit_flagsBit_flagsKeyword_6_0()); }
)

{ after(grammarAccess.getAttributeNameAccess().getBit_flagsBit_flagsKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__HasNestedTableNameAssignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getHasNestedTableNameNested_flatbufferKeyword_7_0_0()); }
(
{ before(grammarAccess.getAttributeNameAccess().getHasNestedTableNameNested_flatbufferKeyword_7_0_0()); }

	'nested_flatbuffer' 

{ after(grammarAccess.getAttributeNameAccess().getHasNestedTableNameNested_flatbufferKeyword_7_0_0()); }
)

{ after(grammarAccess.getAttributeNameAccess().getHasNestedTableNameNested_flatbufferKeyword_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__NestedTableNameAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getNestedTableNameSTRINGTerminalRuleCall_7_2_0()); }
	RULE_STRING{ after(grammarAccess.getAttributeNameAccess().getNestedTableNameSTRINGTerminalRuleCall_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__KeyAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getKeyKEY_ATTRIBUTETerminalRuleCall_8_0()); }
	RULE_KEY_ATTRIBUTE{ after(grammarAccess.getAttributeNameAccess().getKeyKEY_ATTRIBUTETerminalRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__CustomNameAssignment_9_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getCustomNameCustomAttributesCrossReference_9_0_0()); }
(
{ before(grammarAccess.getAttributeNameAccess().getCustomNameCustomAttributesIDTerminalRuleCall_9_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAttributeNameAccess().getCustomNameCustomAttributesIDTerminalRuleCall_9_0_0_1()); }
)
{ after(grammarAccess.getAttributeNameAccess().getCustomNameCustomAttributesCrossReference_9_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__IntValueAssignment_9_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getIntValueINTTerminalRuleCall_9_1_1_0_0()); }
	RULE_INT{ after(grammarAccess.getAttributeNameAccess().getIntValueINTTerminalRuleCall_9_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeName__StringValueAssignment_9_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeNameAccess().getStringValueSTRINGTerminalRuleCall_9_1_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getAttributeNameAccess().getStringValueSTRINGTerminalRuleCall_9_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__PrimTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getPrimTypePrimitiveParserRuleCall_0_0()); }
	rulePrimitive{ after(grammarAccess.getTypeAccess().getPrimTypePrimitiveParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__VectorTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getVectorTypeVectorParserRuleCall_1_0()); }
	ruleVector{ after(grammarAccess.getTypeAccess().getVectorTypeVectorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__DefTypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getDefTypeDefinitionCrossReference_2_0()); }
(
{ before(grammarAccess.getTypeAccess().getDefTypeDefinitionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeAccess().getDefTypeDefinitionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getTypeAccess().getDefTypeDefinitionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Vector__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVectorAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getVectorAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEnumAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__TypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getTypePrimitiveNumberTypeParserRuleCall_2_1_0()); }
	rulePrimitiveNumberType{ after(grammarAccess.getEnumAccess().getTypePrimitiveNumberTypeParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__AttributesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getAttributesFieldAttributesParserRuleCall_3_0()); }
	ruleFieldAttributes{ after(grammarAccess.getEnumAccess().getAttributesFieldAttributesParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__EnumCasesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getEnumCasesEnumCaseParserRuleCall_5_0()); }
	ruleEnumCase{ after(grammarAccess.getEnumAccess().getEnumCasesEnumCaseParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__EnumCasesAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getEnumCasesEnumCaseParserRuleCall_6_1_0()); }
	ruleEnumCase{ after(grammarAccess.getEnumAccess().getEnumCasesEnumCaseParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumCase__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumCaseAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getEnumCaseAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumCase__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumCaseAccess().getValueINTTerminalRuleCall_1_1_0()); }
	RULE_INT{ after(grammarAccess.getEnumCaseAccess().getValueINTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Union__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getUnionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Union__UnionCasesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionAccess().getUnionCasesTableCrossReference_3_0()); }
(
{ before(grammarAccess.getUnionAccess().getUnionCasesTableIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getUnionAccess().getUnionCasesTableIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getUnionAccess().getUnionCasesTableCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Union__UnionCasesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionAccess().getUnionCasesTableCrossReference_4_1_0()); }
(
{ before(grammarAccess.getUnionAccess().getUnionCasesTableIDTerminalRuleCall_4_1_0_1()); }
	RULE_ID{ after(grammarAccess.getUnionAccess().getUnionCasesTableIDTerminalRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getUnionAccess().getUnionCasesTableCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID_ATTRIBUTE : 'id';

RULE_DEPRECTED_ATTRIBUTE : 'deprecated';

RULE_REQUIRED_ATTRIBUTE : 'required';

RULE_KEY_ATTRIBUTE : 'key';

RULE_HASH_ATTRIBUTE : 'hash';

RULE_HEX : ('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F'|'_')+ ('#' (('b'|'B') ('i'|'I')|('l'|'L')))?;

RULE_INT : '0'..'9' ('0'..'9'|'_')*;

RULE_DECIMAL : '-'? RULE_INT (('e'|'E') ('+'|'-')? RULE_INT)? (('b'|'B') ('i'|'I'|'d'|'D')|('l'|'L'|'d'|'D'|'f'|'F'))?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


