/*
 * generated by Xtext
 */
package maxim.zaks.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import maxim.zaks.services.FlatBuffersGrammarAccess;

public class FlatBuffersParser extends AbstractContentAssistParser {
	
	@Inject
	private FlatBuffersGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected maxim.zaks.ui.contentassist.antlr.internal.InternalFlatBuffersParser createParser() {
		maxim.zaks.ui.contentassist.antlr.internal.InternalFlatBuffersParser result = new maxim.zaks.ui.contentassist.antlr.internal.InternalFlatBuffersParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getDefinitionAccess().getAlternatives(), "rule__Definition__Alternatives");
					put(grammarAccess.getStructFieldsAccess().getAlternatives_2(), "rule__StructFields__Alternatives_2");
					put(grammarAccess.getValueAccess().getAlternatives(), "rule__Value__Alternatives");
					put(grammarAccess.getAttributeNameAccess().getAlternatives(), "rule__AttributeName__Alternatives");
					put(grammarAccess.getAttributeNameAccess().getAlternatives_9_1_1(), "rule__AttributeName__Alternatives_9_1_1");
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getPrimitiveWithoutStringAccess().getAlternatives(), "rule__PrimitiveWithoutString__Alternatives");
					put(grammarAccess.getPrimitiveAccess().getAlternatives(), "rule__Primitive__Alternatives");
					put(grammarAccess.getPrimitiveNumberTypeAccess().getAlternatives(), "rule__PrimitiveNumberType__Alternatives");
					put(grammarAccess.getValidIDAccess().getAlternatives(), "rule__ValidID__Alternatives");
					put(grammarAccess.getNumberAccess().getAlternatives(), "rule__Number__Alternatives");
					put(grammarAccess.getNumberAccess().getAlternatives_1_0(), "rule__Number__Alternatives_1_0");
					put(grammarAccess.getNumberAccess().getAlternatives_1_1_1(), "rule__Number__Alternatives_1_1_1");
					put(grammarAccess.getSchemaAccess().getGroup(), "rule__Schema__Group__0");
					put(grammarAccess.getRootTypeAccess().getGroup(), "rule__RootType__Group__0");
					put(grammarAccess.getCustomAttributesAccess().getGroup(), "rule__CustomAttributes__Group__0");
					put(grammarAccess.getFileIdentifierAccess().getGroup(), "rule__FileIdentifier__Group__0");
					put(grammarAccess.getFileExtensionAccess().getGroup(), "rule__FileExtension__Group__0");
					put(grammarAccess.getNamespaceAccess().getGroup(), "rule__Namespace__Group__0");
					put(grammarAccess.getIncludeAccess().getGroup(), "rule__Include__Group__0");
					put(grammarAccess.getStructAccess().getGroup(), "rule__Struct__Group__0");
					put(grammarAccess.getStructFieldsAccess().getGroup(), "rule__StructFields__Group__0");
					put(grammarAccess.getTableAccess().getGroup(), "rule__Table__Group__0");
					put(grammarAccess.getFieldsAccess().getGroup(), "rule__Fields__Group__0");
					put(grammarAccess.getFieldsAccess().getGroup_3(), "rule__Fields__Group_3__0");
					put(grammarAccess.getFieldAttributesAccess().getGroup(), "rule__FieldAttributes__Group__0");
					put(grammarAccess.getFieldAttributesAccess().getGroup_2(), "rule__FieldAttributes__Group_2__0");
					put(grammarAccess.getAttributeNameAccess().getGroup_1(), "rule__AttributeName__Group_1__0");
					put(grammarAccess.getAttributeNameAccess().getGroup_4(), "rule__AttributeName__Group_4__0");
					put(grammarAccess.getAttributeNameAccess().getGroup_5(), "rule__AttributeName__Group_5__0");
					put(grammarAccess.getAttributeNameAccess().getGroup_7(), "rule__AttributeName__Group_7__0");
					put(grammarAccess.getAttributeNameAccess().getGroup_9(), "rule__AttributeName__Group_9__0");
					put(grammarAccess.getAttributeNameAccess().getGroup_9_1(), "rule__AttributeName__Group_9_1__0");
					put(grammarAccess.getVectorAccess().getGroup(), "rule__Vector__Group__0");
					put(grammarAccess.getEnumAccess().getGroup(), "rule__Enum__Group__0");
					put(grammarAccess.getEnumAccess().getGroup_2(), "rule__Enum__Group_2__0");
					put(grammarAccess.getEnumAccess().getGroup_6(), "rule__Enum__Group_6__0");
					put(grammarAccess.getEnumCaseAccess().getGroup(), "rule__EnumCase__Group__0");
					put(grammarAccess.getEnumCaseAccess().getGroup_1(), "rule__EnumCase__Group_1__0");
					put(grammarAccess.getUnionAccess().getGroup(), "rule__Union__Group__0");
					put(grammarAccess.getUnionAccess().getGroup_4(), "rule__Union__Group_4__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getNumberAccess().getGroup_1(), "rule__Number__Group_1__0");
					put(grammarAccess.getNumberAccess().getGroup_1_1(), "rule__Number__Group_1_1__0");
					put(grammarAccess.getSchemaAccess().getIncludesAssignment_0(), "rule__Schema__IncludesAssignment_0");
					put(grammarAccess.getSchemaAccess().getNamepsaceAssignment_1(), "rule__Schema__NamepsaceAssignment_1");
					put(grammarAccess.getSchemaAccess().getFileIdentifierAssignment_2(), "rule__Schema__FileIdentifierAssignment_2");
					put(grammarAccess.getSchemaAccess().getFile_extensionAssignment_3(), "rule__Schema__File_extensionAssignment_3");
					put(grammarAccess.getSchemaAccess().getCustomAttributesAssignment_4(), "rule__Schema__CustomAttributesAssignment_4");
					put(grammarAccess.getSchemaAccess().getDefinitionsAssignment_5(), "rule__Schema__DefinitionsAssignment_5");
					put(grammarAccess.getSchemaAccess().getRootTypeAssignment_6(), "rule__Schema__RootTypeAssignment_6");
					put(grammarAccess.getRootTypeAccess().getTypeAssignment_1(), "rule__RootType__TypeAssignment_1");
					put(grammarAccess.getCustomAttributesAccess().getNameAssignment_1(), "rule__CustomAttributes__NameAssignment_1");
					put(grammarAccess.getNamespaceAccess().getNameAssignment_1(), "rule__Namespace__NameAssignment_1");
					put(grammarAccess.getStructAccess().getNameAssignment_1(), "rule__Struct__NameAssignment_1");
					put(grammarAccess.getStructAccess().getAttributesAssignment_2(), "rule__Struct__AttributesAssignment_2");
					put(grammarAccess.getStructAccess().getFieldsAssignment_4(), "rule__Struct__FieldsAssignment_4");
					put(grammarAccess.getStructFieldsAccess().getNameAssignment_0(), "rule__StructFields__NameAssignment_0");
					put(grammarAccess.getStructFieldsAccess().getPrimTypeAssignment_2_0(), "rule__StructFields__PrimTypeAssignment_2_0");
					put(grammarAccess.getStructFieldsAccess().getDefTypeAssignment_2_1(), "rule__StructFields__DefTypeAssignment_2_1");
					put(grammarAccess.getTableAccess().getNameAssignment_1(), "rule__Table__NameAssignment_1");
					put(grammarAccess.getTableAccess().getAttributesAssignment_2(), "rule__Table__AttributesAssignment_2");
					put(grammarAccess.getTableAccess().getFieldsAssignment_4(), "rule__Table__FieldsAssignment_4");
					put(grammarAccess.getFieldsAccess().getNameAssignment_0(), "rule__Fields__NameAssignment_0");
					put(grammarAccess.getFieldsAccess().getTypeAssignment_2(), "rule__Fields__TypeAssignment_2");
					put(grammarAccess.getFieldsAccess().getDefaultValueAssignment_3_1(), "rule__Fields__DefaultValueAssignment_3_1");
					put(grammarAccess.getFieldsAccess().getAttributesAssignment_4(), "rule__Fields__AttributesAssignment_4");
					put(grammarAccess.getValueAccess().getNumberAssignment_0(), "rule__Value__NumberAssignment_0");
					put(grammarAccess.getValueAccess().getIsFalseAssignment_1(), "rule__Value__IsFalseAssignment_1");
					put(grammarAccess.getValueAccess().getIsTrueAssignment_2(), "rule__Value__IsTrueAssignment_2");
					put(grammarAccess.getValueAccess().getEnumCaseAssignment_3(), "rule__Value__EnumCaseAssignment_3");
					put(grammarAccess.getFieldAttributesAccess().getAtributeNamesAssignment_1(), "rule__FieldAttributes__AtributeNamesAssignment_1");
					put(grammarAccess.getFieldAttributesAccess().getAtributeNamesAssignment_2_1(), "rule__FieldAttributes__AtributeNamesAssignment_2_1");
					put(grammarAccess.getAttributeNameAccess().getDeprectatedAssignment_0(), "rule__AttributeName__DeprectatedAssignment_0");
					put(grammarAccess.getAttributeNameAccess().getHasAttributeIdAssignment_1_0(), "rule__AttributeName__HasAttributeIdAssignment_1_0");
					put(grammarAccess.getAttributeNameAccess().getAttributeIdAssignment_1_2(), "rule__AttributeName__AttributeIdAssignment_1_2");
					put(grammarAccess.getAttributeNameAccess().getRequiredAssignment_2(), "rule__AttributeName__RequiredAssignment_2");
					put(grammarAccess.getAttributeNameAccess().getOriginal_orderAssignment_3(), "rule__AttributeName__Original_orderAssignment_3");
					put(grammarAccess.getAttributeNameAccess().getHasAlignSizeAssignment_4_0(), "rule__AttributeName__HasAlignSizeAssignment_4_0");
					put(grammarAccess.getAttributeNameAccess().getAlignSizeAssignment_4_2(), "rule__AttributeName__AlignSizeAssignment_4_2");
					put(grammarAccess.getAttributeNameAccess().getHasHashAssignment_5_0(), "rule__AttributeName__HasHashAssignment_5_0");
					put(grammarAccess.getAttributeNameAccess().getHashKeyAssignment_5_2(), "rule__AttributeName__HashKeyAssignment_5_2");
					put(grammarAccess.getAttributeNameAccess().getBit_flagsAssignment_6(), "rule__AttributeName__Bit_flagsAssignment_6");
					put(grammarAccess.getAttributeNameAccess().getHasNestedTableNameAssignment_7_0(), "rule__AttributeName__HasNestedTableNameAssignment_7_0");
					put(grammarAccess.getAttributeNameAccess().getNestedTableNameAssignment_7_2(), "rule__AttributeName__NestedTableNameAssignment_7_2");
					put(grammarAccess.getAttributeNameAccess().getKeyAssignment_8(), "rule__AttributeName__KeyAssignment_8");
					put(grammarAccess.getAttributeNameAccess().getCustomNameAssignment_9_0(), "rule__AttributeName__CustomNameAssignment_9_0");
					put(grammarAccess.getAttributeNameAccess().getIntValueAssignment_9_1_1_0(), "rule__AttributeName__IntValueAssignment_9_1_1_0");
					put(grammarAccess.getAttributeNameAccess().getStringValueAssignment_9_1_1_1(), "rule__AttributeName__StringValueAssignment_9_1_1_1");
					put(grammarAccess.getTypeAccess().getPrimTypeAssignment_0(), "rule__Type__PrimTypeAssignment_0");
					put(grammarAccess.getTypeAccess().getVectorTypeAssignment_1(), "rule__Type__VectorTypeAssignment_1");
					put(grammarAccess.getTypeAccess().getDefTypeAssignment_2(), "rule__Type__DefTypeAssignment_2");
					put(grammarAccess.getVectorAccess().getTypeAssignment_1(), "rule__Vector__TypeAssignment_1");
					put(grammarAccess.getEnumAccess().getNameAssignment_1(), "rule__Enum__NameAssignment_1");
					put(grammarAccess.getEnumAccess().getTypeAssignment_2_1(), "rule__Enum__TypeAssignment_2_1");
					put(grammarAccess.getEnumAccess().getAttributesAssignment_3(), "rule__Enum__AttributesAssignment_3");
					put(grammarAccess.getEnumAccess().getEnumCasesAssignment_5(), "rule__Enum__EnumCasesAssignment_5");
					put(grammarAccess.getEnumAccess().getEnumCasesAssignment_6_1(), "rule__Enum__EnumCasesAssignment_6_1");
					put(grammarAccess.getEnumCaseAccess().getNameAssignment_0(), "rule__EnumCase__NameAssignment_0");
					put(grammarAccess.getEnumCaseAccess().getValueAssignment_1_1(), "rule__EnumCase__ValueAssignment_1_1");
					put(grammarAccess.getUnionAccess().getNameAssignment_1(), "rule__Union__NameAssignment_1");
					put(grammarAccess.getUnionAccess().getUnionCasesAssignment_3(), "rule__Union__UnionCasesAssignment_3");
					put(grammarAccess.getUnionAccess().getUnionCasesAssignment_4_1(), "rule__Union__UnionCasesAssignment_4_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			maxim.zaks.ui.contentassist.antlr.internal.InternalFlatBuffersParser typedParser = (maxim.zaks.ui.contentassist.antlr.internal.InternalFlatBuffersParser) parser;
			typedParser.entryRuleSchema();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public FlatBuffersGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(FlatBuffersGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
